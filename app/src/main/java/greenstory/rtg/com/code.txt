ScrollView scrollView;
    LinearLayout scrollChildLayout;
    TextView trackTV;
    Button addText;
    public Context context = this;
    public int i = 1;

    Cursor cursor = mDb.query("users",null,null,null,null,null,null);

     Cursor cursor = mDb.query("users",null,null,null,null,null,null);
            cursor.moveToFirst();
            Log.d ("db",String.valueOf(cursor.getString(cursor.getColumnIndex("uId"))));

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_home);

        scrollView = (ScrollView) findViewById(R.id.scroller);
        scrollChildLayout = (LinearLayout) findViewById(R.id.scroll_contents);


        addText = (Button) findViewById(R.id.add_item_button);


        addText.setOnClickListener(listener);

    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {

        getMenuInflater().inflate(R.menu.menu_main, menu);

        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item){
        if (item.getItemId()==R.id.user_preferences_menu_item) {
            Intent intent = new Intent(this, UserActivity.class);
            startActivity(intent);
        }
        return true;
    }

    View.OnClickListener listener = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            LayoutParams layoutParams = new LayoutParams(LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);
            if (v.getId() == addText.getId()) {
                trackTV = new TextView(context);
                trackTV.setLayoutParams(layoutParams);
                trackTV.setText("view " + String.valueOf(i));
                i++;
                scrollChildLayout.addView(trackTV);
                Log.d("Pressed", "onClick: ");
            }
        }
    };


    ScrollView scrollView;
    LinearLayout scrollChildLayout;

    scrollView = (ScrollView) findViewById(R.id.scroller);
            scrollChildLayout = (LinearLayout) findViewById(R.id.scroll_contents);



    <TextView
        android:id="@+id/tv_family_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="משפחה"
        android:layout_below="@+id/name_layout"/>

    <EditText
        android:id="@+id/et_family_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_toRightOf="@+id/tv_family_name"
        android:layout_alignTop="@id/tv_family_name"/>

    <TextView
        android:id="@+id/tv_age"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="גיל"
        android:layout_below="@+id/tv_family_name"
        />
    <EditText
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/ed_age"
        android:layout_toRightOf="@id/tv_age"
        android:layout_alignTop="@id/tv_age"/>

    <TextView
        android:id="@+id/tv_partner_name"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/tv_age"
        android:text="בן זוג" />

    <EditText
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:id="@+id/ed_partner_name"
        android:layout_toRightOf="@id/tv_partner_name"
        android:layout_alignTop="@id/tv_partner_name"/>


        <Button
                android:id="@+id/btn_delete_db"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_alignParentEnd="true"
                android:layout_alignParentRight="true"
                android:layout_alignParentTop="true"
                android:layout_marginEnd="17dp"
                android:layout_marginRight="17dp"
                android:layout_marginTop="28dp"
                android:gravity="center"
                android:text="Delete DB" />

            <Button
                android:id="@+id/goToMaps"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_alignParentLeft="true"
                android:layout_alignParentStart="true"
                android:layout_below="@+id/btn_delete_db"
                android:layout_marginLeft="86dp"
                android:layout_marginStart="86dp"
                android:text="open map" />

            <ScrollView
                android:id="@+id/scroller"
                android:layout_width="wrap_content"
                android:layout_height="match_parent"
                android:layout_gravity="center">

                <LinearLayout
                    android:id="@+id/scroll_contents"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:gravity="center"
                    android:orientation="vertical">

                </LinearLayout>

            </ScrollView>


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {

        getMenuInflater().inflate(R.menu.menu_main, menu);

        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        if (item.getItemId() == R.id.user_preferences_menu_item) {
            Intent intent = new Intent(this, UserActivity.class);
            startActivity(intent);
        }
        return true;
    }

<TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:text="title"/>

    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="horizontal"
        android:weightSum="2">



        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:layout_weight="1">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="text"/>

        </LinearLayout>

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:layout_weight="1">

            <TextView
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:text="text2"/>
        </LinearLayout>

    </LinearLayout>

    /*View.OnClickListener onAreaClickListener = new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                switch (v.getId()) {
                    case R.id.tv_north_area:
                        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(northAreaLatLng,9.3f));
                        backClicked=false;
                        northAreaTextView.setOnClickListener(null);
                        centerAreaTextView.setOnClickListener(null);
                        southAreaTextView.setOnClickListener(null);
                        northAreaTextView.setVisibility(View.GONE);
                        northAreaTextView.setEnabled(false);
                        break;
                    case R.id.tv_center_area:
                        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(centerAreaLatLng,9.5f));
                        backClicked=false;
                        northAreaTextView.setOnClickListener(null);
                        centerAreaTextView.setOnClickListener(null);
                        southAreaTextView.setOnClickListener(null);
                        break;
                    case R.id.tv_south_area:
                        mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(southAreaLatLng,9.3f));
                        backClicked=false;
                        northAreaTextView.setOnClickListener(null);
                        centerAreaTextView.setOnClickListener(null);
                        southAreaTextView.setOnClickListener(null);
                        break;
                }
            }
        };*/


        //android.support.v7.app.ActionBar actionBar = getSupportActionBar();
                //actionBar.setDisplayShowHomeEnabled(true);
               //actionBar.setDisplayShowTitleEnabled(true);
                //actionBar.setDisplayShowCustomEnabled(true);
                //actionBar.setDefaultDisplayHomeAsUpEnabled(true);
                //actionBar.setHomeButtonEnabled(true);
                //actionBar.setCustomView(actionBarLayout);

                //final int actionBarColor = getResources().getColor(R.color.action_bar);
                //actionBar.setBackgroundDrawable(new ColorDrawable(actionBarColor));

                //final Button actionBarTitle = (Button) findViewById(R.id.action_bar_title);
                //actionBarTitle.setText("b1");

                //final Button actionBarSent = (Button) findViewById(R.id.action_bar_sent);
                //actionBarSent.setText("b2");

                //final Button actionBarStaff = (Button) findViewById(R.id.action_bar_staff);
                //actionBarStaff.setText("b3");

                //final Button actionBarLocations = (Button) findViewById(R.id.action_bar_locations);
                //actionBarLocations.setText("HIPPA Locations");

                //northAreaTextView = (TextView) findViewById(R.id.tv_north_area);
                //centerAreaTextView = (TextView) findViewById(R.id.tv_center_area);
                //southAreaTextView = (TextView) findViewById(R.id.tv_south_area);

                public void LoadTracksMarkers() {
                        Thread thread = new Thread(new Runnable(){
                            @Override
                            public void run() {
                                try {

                                } catch (XmlPullParserException e) {
                                    e.printStackTrace();
                                } catch (IOException e) {
                                    e.printStackTrace();
                                }
                                //String placemarkPointName = null;
                                //if (kmlLayer.isLayerOnMap()) {
                                    if (siteLayer.hasContainers()||siteLayer.hasPlacemarks()) {
                                        Iterable<KmlContainer> layerContainers = siteLayer.getContainers();
                                        for (KmlContainer layerContainer : layerContainers) {
                                            if (layerContainer.hasPlacemarks()) {
                                                Iterable<KmlPlacemark> tracksPlacemarks = layerContainer.getPlacemarks();
                                                for (KmlPlacemark trackPlacemark : tracksPlacemarks) {
                                                    mMap.addMarker(trackPlacemark.getMarkerOptions());
                                                    //marker.setIcon(BitmapDescriptorFactory.fromResource(trackPlacemark.getProperty("iconRes")));
                                                    //Log.d("marker title",String.valueOf(trackPlacemark.getMarkerOptions()));

                                                }
                                            }
                                        }
                                    }
                                }
                        });
                        thread.start();
                    }
